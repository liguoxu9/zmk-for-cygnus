/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    tapping-term-ms = <160>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };
    };

    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <200>;
            tapping-term-ms = <250>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            global-quick-tap;
            quick-tap-ms = <160>;
            flavor = "tap-preferred";
        };

        tap_hold_1: th1 {
            compatible = "zmk,behavior-hold-tap";
            label = "th1";
            bindings = <&m1>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
        };
    };

    macros {
        left_bl: lbl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
            label = "lbl";
        };

        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 400>,
                <&kp LC(S) &kp A &kp N5 &kp ENTER>;

            label = "m1";
        };

        m2: m2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp N2 &kp RET>;
            label = "M2";
        };

        m3: m3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N2 &kp RET>;
            label = "M3";
        };

        m4: m4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp N2 &kp RET>;
            label = "M4";
        };

        m5: m5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp Q &kp N2 &kp RET>,
                <&macro_wait_time 200>,
                <&kp S &kp D &kp SPACE &kp RET>;

            label = "M5";
        };

        m6: m6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp F &kp SPACE &kp RET>,
                <&macro_wait_time 200>,
                <&kp F &kp F &kp SPACE &kp RET>;

            label = "M6";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q        &kp W           &kp E                &kp R        &kp T             &kp Y              &kp U            &kp I                &kp O        &kp P
&mt LCTRL A  &mt LEFT_WIN S  &mt LEFT_ALT D       &lt 4 F      &mt LEFT_SHIFT G  &mt RIGHT_SHIFT H  &mt RIGHT_ALT J  &mt RIGHT_WIN K      &mt RCTRL L  &lt 2 ENTER
&lt 7 Z      &kp X           &kp C                &kp V        &kp B             &kp N              &kp M            &kp COMMA            &kp PERIOD   &lt 7 SLASH
                             &tap_hold_1 0 LC(D)  &lt 5 ENTER  &ltq 2 SPACE      &ltq 3 BACKSPACE   &lt 5 SPACE      &tap_hold_1 0 LC(D)
            >;
        };

        game {
            bindings = <
&trans  &trans  &trans  &trans              &trans     &trans  &trans  &trans  &trans  &trans
&trans  &kp S   &kp D   &kp F               &kp G      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans              &trans     &trans  &trans  &trans  &trans  &trans
                &trans  &mt LEFT_ALT ENTER  &kp SPACE  &trans  &trans  &trans
            >;
        };

        num+fun {
            bindings = <
&kp N2    &kp NUMBER_3  &kp NUMBER_4  &kp N5        &kp NUMBER_6   &kp N7        &kp N8        &kp N9        &kp N0            &kp MINUS
&kp LEFT  &kp DOWN      &kp RIGHT     &kp UP_ARROW  &kp PG_UP      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SEMICOLON     &kp SQT
&kp HOME  &kp DEL       &kp END       &kp PG_DN     &kp GRAVE      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
                        &none         &kp EQUAL     &kp BACKSLASH  &kp N0        &kp PERIOD    &none
            >;
        };

        shift {
            bindings = <
&kp AT_SIGN   &kp HASH        &kp DOLLAR     &kp PERCENT       &kp CARET      &kp AMPERSAND          &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp LS(LEFT)  &kp LS(DOWN)    &kp LS(RIGHT)  &kp LS(UP_ARROW)  &kp LS(PG_UP)  &kp DOLLAR             &kp PERCENT       &kp CARET             &kp COLON              &kp DOUBLE_QUOTES
&kp LS(HOME)  &kp RS(DELETE)  &kp LS(END)    &kp LS(PG_DN)     &kp TILDE      &kp EXCLAMATION        &kp AT_SIGN       &kp POUND             &kp LEFT_BRACE         &kp RIGHT_BRACE
                              &none          &kp PLUS          &kp PIPE       &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &tog 1
            >;
        };

        funtion {
            bindings = <
&none      &kp LC(UP_ARROW)  &none  &kp F5         &none          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&kp LC(A)  &kp LC(DOWN)      &none  &none          &none          &kp F4  &kp F5  &kp F6  &none    &kp F12
&kp LC(Z)  &none             &none  &none          &none          &kp F1  &kp F2  &kp F3  &none    &none
                             &none  &kp LS(LA(D))  &kp LS(LG(S))  &none   &none   &none
            >;
        };

        mouse+media {
            bindings = <
&mkp LCLK       &mmv MOVE_UP      &mkp RCLK        &msc SCRL_UP    &msc SCRL_LEFT   &msc SCRL_LEFT   &msc SCRL_UP    &mkp LCLK       &mmv MOVE_UP    &mkp RCLK
&mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &msc SCRL_RIGHT  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT
&kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_VOL_DN    &kp C_VOL_UP     &kp C_PREVIOUS   &kp C_PP        &kp C_NEXT      &kp C_VOL_DN    &kp C_VOL_UP
                                  &none            &none           &mo 6            &mo 6            &none           &none
            >;
        };

        bluetooth {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none     &none  &none  &none  &kp C_SLEEP
&bt BT_CLR    &none         &none         &none         &none         &none     &none  &none  &none  &none
&none         &none         &none         &none         &bootloader   &left_bl  &none  &none  &none  &none
                            &none         &none         &none         &none     &none  &none
            >;
        };

        working-macro {
            bindings = <
&none  &m5        &m6    &none  &none  &none  &m5        &m6    &none  &none
&none  &m2        &m3    &m4    &none  &none  &m2        &m3    &m4    &none
&none  &kp LC(D)  &m1    &none  &none  &none  &kp LC(D)  &m1    &none  &none
                  &none  &none  &none  &none  &none      &none
            >;
        };
    };
};
